// Outside of type-checking, Magpie needs to handle callig a function or method
// with too many or too few arguments. If you pass too many, extra ones will be
// ignored. If you pass too few, missing ones will be set to nothing.
//
// There's one important "special" case to notice. If a function takes one
// argument and you pass it multiple, it will actually just bind the entire
// argument tuple to the first parameter. This is because all functions in
// Magpie only take one argument. Functions just have tuple destructuring built
// in. In the case of a one-parameter function, it just won't destructure.

var noArgs()
    print("no args")
end

noArgs()        //: no args
noArgs(1)       //: no args
noArgs(1, 2, 3) //: no args

var oneArg(a)
    print(a)
end

oneArg()        //: nothing
oneArg(1)       //: 1
oneArg(1, 2, 3) //: (1, 2, 3)

var twoArgs(a, b)
    print(a string + " " + b string)
end

twoArgs()        //: nothing nothing
twoArgs(1)       //: 1 nothing
twoArgs(1, 2, 3) //: 1 2

var threeArgs(a, b, c)
    print(a string + " " + b string + " " + c string)
end

threeArgs()        //: nothing nothing nothing
threeArgs(1)       //: 1 nothing nothing
threeArgs(1, 2)    //: 1 2 nothing
threeArgs(1, 2, 3) //: 1 2 3
