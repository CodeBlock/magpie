class Base
end

class Derived
end

Derived parent = Base

// toString. Note: branches are sorted, duplicates are removed, and a
// hierarchy gets flattened.
print(Int | Bool) //: Bool | Int
print(Int | Bool | String) //: Bool | Int | String
print(Int | Bool | String | Bool) //: Bool | Int | String
print((Int | Bool) | (String | Bool)) //: Bool | Int | String

// A value of any of the unioned types is permitted.
print((Int | Bool) canAssignFrom(Int)) //: true
print((Int | Bool) canAssignFrom(Bool)) //: true
print((Int | Bool) canAssignFrom(String)) //: false
print((Int | Bool) canAssignFrom(Nothing)) //: false

// But a union can't be un-unioned.
print(Int canAssignFrom(Int | Bool)) //: false
print(Bool canAssignFrom(Int | Bool)) //: false
print((Int | Bool) canAssignFrom(Int | Bool)) //: true

// Order doesn't matter.
print((Bool | Int) canAssignFrom(Int | Bool)) //: true

// Can chain.
print((Int | Bool | String) canAssignFrom(Int)) //: true
print((Int | Bool | String) canAssignFrom(Bool)) //: true
print((Int | Bool | String) canAssignFrom(String)) //: true

print(Int canAssignFrom(Int | Bool | String)) //: false
print(Bool canAssignFrom(Int | Bool | String)) //: false
print(String canAssignFrom(Int | Bool | String)) //: false
print((Int | String) canAssignFrom(Int | Bool | String)) //: false
print((Bool | Int | String) canAssignFrom(Int | Bool | String)) //: true

// Covariant.
print((Base | Bool) canAssignFrom(Derived | Bool)) //: true
print((Derived | Bool) canAssignFrom(Base | Bool)) //: false
