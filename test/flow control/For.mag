// TODO(bob): Hack temp code for "to" and "times". But it works!

class RangeGenerator
    this (start Int, stop Int)
        current = start
        this.stop = stop
    end
    
    current Int
    stop    Int
    
    next (-> Bool)
        current = current + 1
        current < stop
    end
end

class Range
    this (start Int, stop Int)
        this.start = start
        this.stop = stop
    end
    
    start Int
    stop  Int
    
    generate (-> RangeGenerator)
        RangeGenerator.new (start - 1, stop)
    end
end

extend Int
    times (-> Range) Range.new (0, this)
    to (to Int -> Range) Range.new (this, to)
end

// one line
for i = 3.times do print i.toString
//: 0
//: 1
//: 2

// block body
for i = 3.times do
    print i.toString
end
//: 0
//: 1
//: 2

// parallel iterators
for i = 10.to 60 for j = 5.to 12
for k = 3.times do
    print i.toString
    print j.toString
    print k.toString
end
//: 10
//: 5
//: 0
//: 11
//: 6
//: 1
//: 12
//: 7
//: 2
