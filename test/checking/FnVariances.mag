class Base
end

class Derived
end
Derived parent = Base

var takeBase(a Base ->) nothing
var takeDerived(a Derived ->) nothing

var returnBase(-> Base) Base new
var returnDerived(-> Derived) Derived new

var main(->)
    print(Base canAssignFrom(Derived)) //: true
    
    // Functions are contravariant with respect to their argument type.
    print(takeBase type canAssignFrom(takeDerived type)) //: false
    print(takeDerived type canAssignFrom(takeBase type)) //: true

    // Functions are covariant with respect to their return type.
    print(returnBase type canAssignFrom(returnDerived type)) //: true
    print(returnDerived type canAssignFrom(returnBase type)) //: false
end

