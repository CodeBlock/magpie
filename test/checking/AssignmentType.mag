// Once initialized, a variable cannot be assigned a value of a type
// incompatible with the initialized type. This is required to make sure
// variables are type-safe in the presence of closures and fields. Consider:
//
// var a = "hi"
// var f(-> String) a
// a = 123
// f()
//
// The function f fails to meets its type guarantee here because a's type has
// changed.

var intOrString(value Int -> Int | String) value

var main(->)
    var a = 123
    a = 234
    
    var b = 123
    b = "hi" //!
    
    var c = intOrString(123)
    c = "hi" // ok: String is compatible with Int | String
end
