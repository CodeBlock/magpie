// This script is to test that the checker correctly evaluates the types of the
// different Magpie AST nodes.

// "and" expressions.
var and1(-> Bool | Int)
    true and 1
end

var and2(-> Int)
    2 and 1
end

// Assignment expressions.
// TODO(bob): implement.

// Block expressions.
var block1(-> Bool)
    1
    "hi"
    true
end

var block2(-> String)
    1
    "hi"
end

// Bool expressions.
var bool1(-> Bool) true

// Class expressions.
// TODO(bob): implement.

// Fn expressions.
// TODO(bob): implement.

// If expressions.
var if1(-> Int)
    if true then 1 else 2
end

var if2(-> Int | String)
    if true then "1" else 2
end

var if3(-> Int | Nothing)
    if true then 1
end

// Int expressions.
var int1(-> Int) 123

// Loop expressions.
var loop1(->)
    for i = 1 to(2) do
        "hey"
    end
end

var loop2(->)
    while false do
        "hey"
    end
end

// Message expressions.
var message1(-> Int)
    var i = 123
    i
end

// TODO(bob): implement.

// Nothing expressions.
var nothing1(->) nothing

// "or" expressions.
var or1(-> Bool | Int)
    true or 1
end

var or2(-> Int)
    2 and 1
end

// Return expressions.
var return1(-> String)
    return "hi"
end

var return1(-> Int | String)
    if true then return "hi"
    123
end

var return2(-> Bool | Int | String)
    if true then return "hi"
    if false then return true
    123
end

// String expressions.
var string1(-> String) "hi"

// This expressions.
class Foo
end

def Foo bar(-> Foo)
    this
end

var this1(-> Foo)
    Foo new bar
end

// Tuple expressions.
var tuple1(-> (Int, String))
    1, "2"
end

var tuple2(-> (String, Int))
    "2", 1
end

var tuple3(-> (Bool, Bool, Bool))
    true, false, true
end

// Typeof expressions.
// TODO(bob): implement.

// Variable declaration expressions.
var var1(-> Int)
    var i = 123
end

// TODO(bob): implement.
