// A let expression should take the type of the conditional expression and
// create a new variable whose type is the same minus the "| Nothing" branch.

var foo(a Int | String ->)
    print(a string)
end

var main(->)
    var a = if true then 123 else (if true then "str" else nothing)
    // a: Int | Nothing | String
    
    let b = a then // b: Int | String
        // If b can be nothing, then this call to foo() should cause a type
        // error because it doesn't allow that:
        foo(b) //: 123
    end
end

