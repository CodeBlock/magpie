specify("The 'getMemberType' method on OrType") with
    it should("return Nothing if no case has it") with
        (Int | String) getMemberType("unknown") shouldBe(Nothing)
    end
    
    it should("return the union of the cases' member types") with
        class A
            get foo Int = 1
        end
        class B
            get foo String = "s"
        end
        class C
            get foo Bool = true
        end
        (A | B | C) getMemberType("foo") shouldBe(Bool | Int | String)
    end
    
    it should("include Nothing in the returned case if a case lacks it") with
        class A
            get foo Int = 1
        end
        class B
        end
        (A | B) getMemberType("foo") shouldBe(Int | Nothing)
    end
end
