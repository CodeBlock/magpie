specify("The 'parents' getter on Class") with
    it should("get the list of parents on the class") with
        class Foo
        end

        // By default, a class mixes in Object.
        Foo parents count shouldBe(1)
        Foo parents(0) shouldBe(Object)
    end

    it should("allow modification") with
        class Foo
        end

        // By default, a class mixes in Object.
        Foo parents count shouldBe(1)
        Foo parents clear()
        Foo parents count shouldBe(0)
    end

    it should("affect method dispatch on the class") with
        class Foo
        end

        class Mixin
            def method(-> String) "received"
        end

        // Not mixed in.
        var foo = Foo new()
        fn
            foo method() shouldBe(nothing)
        end shouldThrow(BadCallError)

        // Mix it in.
        Foo parents add(Mixin)
        foo method() shouldBe("received")
    end

    it should("lookup methods in parents from last to first") with
        class Foo
        end

        class Mixin1
            def method(-> String) "one"
        end

        class Mixin2
            def method(-> String) "two"
        end

        var foo = Foo new()

        Foo parents clear()
        Foo parents add(Mixin1)
        Foo parents add(Mixin2)
        foo method() shouldBe("two")

        Foo parents clear()
        Foo parents add(Mixin2)
        Foo parents add(Mixin1)
        foo method() shouldBe("one")
    end
end
