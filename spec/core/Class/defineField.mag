// Defined fields are temporarily dead. The current plan is that all field
// access goes through getters and setters. To do that, we need the type
// declaration Expr for each field, and a defined field doesn't provide that.
nothing
/*
specify("The 'defineField' method on Class") with
    it should("define an initialized field on the class") with
        var c = Class new("c")
        c defineField("foo", fn() "value")
        c new() foo shouldBe("value")
    end

    it should("initialize the field before the constructor is called") with
        var c = Class new("c")
        var called = ""
        c defineField("foo", fn() called = called + "init")
        c defineConstructor(fn() called = called + "ctor")
        c new()
        called shouldBe("initctor")
    end

    it should("replace an existing definition") with
        var c = Class new("c")
        c defineField("foo", fn() "before")
        c defineField("foo", fn() "after")
        c new() foo shouldBe("after")
    end
end
*/