specify("The 'defineGetter' method on Class") with
    it should("define a readable property on the class") with
        var c = Class new("c")
        c defineGetter("foo", fn() "prop")
        c new() foo shouldBe("prop")
    end

    it should("evaluate the body each time the property is read") with
        var c = Class new("c")
        var prop = ""
        c defineGetter("foo", fn() prop = prop ~ "get")
        c new() foo shouldBe("get")
        c new() foo shouldBe("getget")
    end

    it should("replace an existing definition") with
        var c = Class new("c")
        c defineGetter("foo", fn() "before")
        c defineGetter("foo", fn() "after")
        c new() foo shouldBe("after")
    end

    it should("create a property with the declared type") with
        var c = Class new("c")
        c defineGetter("foo", fn(-> Int) 123)
        c defineMethod("test", fn(-> Int) this foo)
        c shouldCheck()
        
        var d = Class new("d")
        d defineGetter("foo", fn(-> Int) 123)
        d defineMethod("test", fn(-> String) this foo)
        d shouldNotCheck()
    end
    
    it should("ensure the getter body takes no arguments") with
        var c = Class new("c")
        c defineGetter("foo", fn(-> Int) 123)
        c shouldCheck()

        var d = Class new("d")
        d defineGetter("foo", fn(arg -> Int) 123)
        d shouldNotCheck()
    end
    
    it should("ensure the getter body returns the declared type") with
        var c = Class new("c")
        c defineGetter("foo", fn(-> Int) 123)
        c shouldCheck()

        var d = Class new("d")
        d defineGetter("foo", fn(arg -> Int) "not int")
        d shouldNotCheck()
    end
end
