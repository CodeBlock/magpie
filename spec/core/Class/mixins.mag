specify("The 'mixins' getter on Class") with
    it should("get the list of mixins on the class") with
        class Foo
        end
        
        // By default, a class mixes in Object.
        Foo mixins count shouldBe(1)
        Foo mixins(0) shouldBe(Object)
    end

    it should("allow modification") with
        class Foo
        end
        
        // By default, a class mixes in Object.
        Foo mixins count shouldBe(1)
        Foo mixins clear()
        Foo mixins count shouldBe(0)
    end

    it should("affect method dispatch on the class") with
        class Foo
        end
        
        class Mixin
            def method(-> String) "received"
        end
        
        // Not mixed in.
        var foo = Foo new()
        foo method() shouldBe(nothing)
        
        // Mix it in.
        Foo mixins add(Mixin)
        foo method() shouldBe("received")
    end

    it should("lookup methods in mixins from last to first") with
        class Foo
        end
        
        class Mixin1
            def method(-> String) "one"
        end
        
        class Mixin2
            def method(-> String) "two"
        end

        var foo = Foo new()
        
        Foo mixins clear()
        Foo mixins add(Mixin1)
        Foo mixins add(Mixin2)
        foo method() shouldBe("two")
        
        Foo mixins clear()
        Foo mixins add(Mixin2)
        Foo mixins add(Mixin1)
        foo method() shouldBe("one")
    end

    it should("not allow mixing in a stateful class") with
        class Stateless
        end
        
        class Stateful
            var state Int = 123
        end
        
        class Good
            mixin(Stateless)
        end
        Good shouldCheck()
        
        class Bad
            mixin(Stateful)
        end
        Bad shouldNotCheck()
    end

    // TODO(bob): Abstract methods aren't supported yet.
    /*
    it should("require the mixing class to implement any declared methods " +
              "in the mixin") with
        class Mixin
            def provided(->) print("provided")
            def required(arg String ->)
        end
        
        class GoodHost
            mixin(Mixin)
            def required(arg String ->) print("required")
        end
        GoodHost shouldCheck()
        
        class BadHost
            mixin(Mixin)
            def required(arg Int ->) print("wrong arg type")
        end
        BadHost shouldNotCheck()
    end
    */
end
