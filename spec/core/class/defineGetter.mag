specify("The 'defineGetter' method on Class") with
    it should("define a readable property on the class") with
        var c = Class new("c")
        c defineGetter("foo", fn() "prop")
        c new() foo shouldBe("prop")
    end

    it should("evaluate the body each time the property is read") with
        var c = Class new("c")
        var prop = ""
        c defineGetter("foo", fn() prop = prop + "get")
        c new() foo shouldBe("get")
        c new() foo shouldBe("getget")
    end

    it should("replace an existing definition") with
        var c = Class new("c")
        c defineGetter("foo", fn() "before")
        c defineGetter("foo", fn() "after")
        c new() foo shouldBe("after")
    end

    it should("create a property with the declared type") with
        envExpectCheckOK with
            var C = Class new("C")
            C defineGetter("foo", fn(-> Int) 123)
        
            var takesInt(arg Int) nothing
            var main(->)
                takesInt(C new() foo)
            end
        end
        
        envExpectCheckError with
            var C = Class new("C")
            C defineGetter("foo", fn(-> String) "str")
        
            var takesInt(arg Int) nothing
            var main(->)
                takesInt(C new() foo)
            end
        end
    end

    it should("ensure the getter body returns the declared type") with
        envExpectCheckOK with
            var c = Class new("c")
            c defineGetter("foo", fn(-> Int) 123)
            var main(->) nothing
        end

        envExpectCheckError with
            var c = Class new("c")
            c defineGetter("foo", fn(-> Int) "not int")
            var main(->) nothing
        end
    end
end
