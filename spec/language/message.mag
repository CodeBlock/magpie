specify("A message expression") with
    it should("return nothing if not handled") with
        "s" someUndefinedMessage shouldBe(nothing)
    end
end

specify("A private message") with
    it should("be accessible from members of the same class") with
        class C
            var _private = "private"
            get private = _private
        end

        C new() private shouldBe("private")
    end

    it should("not be accessible from outside the class") with
        class C
            var _private = "private"
        end

        C new() _private shouldBe(nothing)

        class D
            get fromC = C new() _private
        end

        D new() fromC shouldBe(nothing)
    end

    it should("not be accessible from child classes") with
        class Parent
            get _private = "private"
        end

        class Child : Parent
            get private = _private
        end

        Child new() private shouldBe(nothing)
    end

    it should("not override a parent one") with
        class Parent
            get _private = "p"
            get privateParent = _private
        end

        class Child : Parent
            var _private = "c"
            get privateChild = _private
        end

        var obj = Child new()
        obj privateParent shouldBe("p")
        obj privateChild shouldBe("c")
    end

    it should("be able to call an overridden member from a parent") with
        class Parent
            get overridable = "p"
            get _private = overridable
            get private = _private
        end

        class Child : Parent
            get overridable = "c"
        end

        Child new() overridable shouldBe("c")
    end
end
