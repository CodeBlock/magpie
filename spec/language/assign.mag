import spec.specify

// TODO(bob):
// - List destructuring.
// - Runtime error on assigning to undefined.

specify("An assignment ('=') expression") with
    it should("assign to a variable") with
        var a = "before"
        a = "after"
        a shouldEqual("after")
    end

    it should("assign to a variable in an outer scope") with
        var a = "before"
        do
            a = "after"
        end
        a shouldEqual("after")
    end

    it should("assign to the innermost shadowed variable") with
        var a = "outer"
        do
            var a = "shadow"
            do
                a = "after"
            end
            a shouldEqual("after")
        end
        a shouldEqual("outer")
    end

    it should("return the assigned value") with
        var a = "before"
        (a = "after") shouldEqual("after")
    end

    /*
    it should("destructure a record") with
        var a = "a"
        var b = "b"
        var c = "c"
        var d = "d"

        x: a, y: b, z: (c, d) = x: "1", y: "2", z: ("3", "4")
        a shouldEqual("1")
        b shouldEqual("2")
        c shouldEqual("3")
        d shouldEqual("4")
    end

    it should("call a setter") with
        def withArg_=(arg, value)
            arg + value
        end
        (withArg("arg") = "value") shouldEqual("argvalue")

        def (_) noArg_=(value)
            this + value
        end
        ("this" noArg = "value") shouldEqual("thisvalue")

        def (_) withBoth_=(arg, value)
            this + arg + value
        end
        ("this" withBoth("arg") = "value") shouldEqual("thisargvalue")
    end
    */
end
