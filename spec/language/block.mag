// TODO(bob): This is really kind of redundant with 'do'.

specify("A block expression") with
    def doBlock(block) block()

    it should("evaluate the expressions in order") with
        var result = ""
        doBlock with
            result = result ~ "1"
            result = result ~ "2"
            result = result ~ "3"
        end
        result shouldEqual("123")
    end

    it should("return the value of the last expression") with
        (doBlock with
            1
            2
        end) shouldEqual(2)

        (doBlock with
            "first"
            "second"
            "last"
        end) shouldEqual("last")
    end

    it should("define a local variable scope") with
        var a = "outer"
        doBlock with
            var a = "inner"
            a shouldEqual("inner")
        end
        a shouldEqual("outer")
    end

    it should("evaluate to nothing if the block is empty") with
        do
        end shouldEqual(nothing)
    end
end
