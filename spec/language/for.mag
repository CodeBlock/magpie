specify("A 'for' expression") with
    it should("create a fresh variable each iteration") with
        var closures = Array new()
        for a = 1 to(3) do closures add(fn a)
        closures(0)() shouldEqual(1)
        closures(1)() shouldEqual(2)
        closures(2)() shouldEqual(3)
    end

    it should("create a local scope for the hidden iterator variable") with
        fn
            for a = 1 to(3) do nothing
            for a = 1 to(3) do nothing
        end shouldNotThrow()
    end

    it should("create a local scope for the 'do' expression") with
        var a = "outer"
        for b = 1 to(3) do var a = "inner"
        a shouldEqual("outer")
    end
end
