import spec.specify

import io.path

specify("The 'baseName' method") with
    it should("return the last component of the filename") with
        "a" baseName shouldEqual("a")
        "/a" baseName shouldEqual("a")
        "/a/b" baseName shouldEqual("b")
        "/ab/ba/bag" baseName shouldEqual("bag")
        "/ab/ba/bag.txt" baseName shouldEqual("bag.txt")
        "/foo/bar/baz.bang" baseName shouldEqual("baz.bang")
        "/foo/bar.baz.bang" baseName shouldEqual("bar.baz.bang")
    end

    it should("ignore trailing directory separators") with
        "foo/" baseName shouldEqual("foo")
        "bar///" baseName shouldEqual("bar")
    end

    it should("handle edge cases") with
        "" baseName shouldEqual("")
        "." baseName shouldEqual(".")
        ".." baseName shouldEqual("..")
    end
end

specify("The 'dirName' method") with
    it should("return all the components of filename except the last one") with
        "/dir/file" dirName shouldEqual("/dir")
        "/path/to/file.txt" dirName shouldEqual("/path/to")
        "file.txt" dirName shouldEqual("")
        "" dirName shouldEqual("")
        "/" dirName shouldEqual("")
        "/foo/foo" dirName shouldEqual("/foo")
    end

    it should("ignore a trailing '/'") with
        "/foo/bar/" dirName shouldEqual("/foo")
    end

    it should("handle edge cases") with
        "" dirName shouldEqual("")
        "." dirName shouldEqual("")
        "./" dirName shouldEqual("")
        "./b/./" dirName shouldEqual("./b")
        ".." dirName shouldEqual("")
        "../" dirName shouldEqual("")
        "/" dirName shouldEqual("")
        "/." dirName shouldEqual("/")
        "/foo/" dirName shouldEqual("/")
        "/foo/." dirName shouldEqual("/foo")
        "/foo/./" dirName shouldEqual("/foo")
        "/foo/../." dirName shouldEqual("/foo/..")
        "foo/../" dirName shouldEqual("foo")
    end
end

specify("The 'extension' method") with
    it should("return the extension of the filename") with
        "a.txt" extension shouldEqual(".txt")
        "a" extension shouldEqual("")
        "some/path/a.txt" extension shouldEqual(".txt")
        ".bashrc" extension shouldEqual("")
        "path/.bashrc" extension shouldEqual("")
    end

    it should("ignore dots in directories") with
        "dir.ext/path.txt" extension shouldEqual(".txt")
        "foo.bar/path" extension shouldEqual("")
    end

    it should("return just the last part if there are multiple dots") with
        "a.b.c" extension shouldEqual(".c")
    end

    it should("handle edge cases") with
        "" extension shouldEqual("")
        "." extension shouldEqual("")
        "/" extension shouldEqual("")
        "/." extension shouldEqual("")
        ".foo." extension shouldEqual(".")
        "foo." extension shouldEqual(".")
    end
end
