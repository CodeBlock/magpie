// This tests the Lexer class by reading and lexing Magpie's standard lib.
// It expends to be invoked from the top magpie/ directory.

import magpie.syntax
import magpie.syntax.lexer
import io
import io.path

def lexFile(path)
    open(path) use with
        val lexer = Lexer new(it read)
        val morpher = Morpher new(tokens: lexer)

        var tokens = 0
        var errors = 0
        for token in morpher do
            tokens = tokens + 1
            match token type
                case == TokenType.ERROR then
                    errors = errors + 1
                    print("ERROR " + token)
                case == TokenType.EOF then break
                else nothing // Do nothing.
            end
        end

        print(tokens + " tokens, " + errors + " errors in " + path)
    end
end

def walk(path)
    if path isFile then
        if (path extension == ".mag") then lexFile(path)
    else
        for file in dir(path) do walk(file)
    end
end

walk("lib")
walk("spec")
