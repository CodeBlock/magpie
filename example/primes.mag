// Send the sequence 2, 3, 4, ... to 'channel'.
def generate(channel is Channel) async
    for i in 2..9999 do channel send(i)
end

// Copy the values from 'input' to 'output',
// removing those divisible by 'prime'.
def filter(input is Channel, output is Channel, prime is Int) async
    input where(fn _ % prime != 0) pipeTo(output)
end

// The prime sieve: Daisy-chain Filter processes.
var channel = Channel new
generate(channel) // Spawn generate fiber.

for i in 0..50 do
    val prime = print(channel receive)
    val sieve = Channel new
    filter(channel, sieve, prime)
    channel = sieve
end
