import classfile:com.stuffwithstuff.magpie.intrinsic.IOMethods

import io.path

// TODO(bob): Need to make sure this cannot be constructed somehow.
defclass File
end

defclass Directory
    val path is String
end

def dir(path is String)
    Directory new(path: path)
end

def (this is Directory) exists
    this path isDir
end

def (this is Directory) iterate
    /// Iterates over the contents of the Directory.
    this _contents iterate
end

defclass FileIterator
    /// Iterator over file contents.
    val file is File
    var line = nothing
end

def (this is File) iterate
    FileIterator new(file: this)
end

def (this is FileIterator) next
    this line = this file readLine()
    this line != nothing
end

def (this is FileIterator) current
    this line
end

def write(s is String)
    /// Writes the given string to standard out. No newline will be appended.
    printString(s)
end

def writeLine(s is String)
    /// Writes the given string to standard out appended by a newline.
    print(s)
end

_setClasses(File)
