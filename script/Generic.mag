def id[T](a T -> T) a

def expectInt(a Int ->) nothing
def expectString(a String ->) nothing

def main(->)
    expectInt(id(123))
    expectString(id("s"))
    expectInt(id("s"))
    expectString(id(123))
end


// Need a way to specify type parameter constraints. That way, we know what to
// type to use in place of the type parameter when checking a method. For
// example:
/*
def sayNames(list List('T))
    for item = list do
        print(item name)
    end
end
*/
// To check that function, we need a way to say that 'T must be a type that
// has a "name" member. Without that, we can just bind 'T to Any or Dynamic,
// but we lose the ability to statically check operations on it.