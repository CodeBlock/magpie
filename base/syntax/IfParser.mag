// Keyword parser for "if" expressions.
class IfParser
    def parse(parser MagpieParser -> Expression)
        parser consume("if")

        // Parse the condition.
        %var%("condition", parser parseBlock(TokenType thenToken) _0)

        // Parse the then body.
        parser consume(TokenType thenToken)
        %var%("thenParse", parser parseBlock("else", "end"))
        %var%("thenExpr", thenParse _0)

        // Parse the else body.
        %var%("consumedEnd?",
            Reflect same?(thenParse _1, nothing) not and
            %unsafecast%(Token, thenParse _1) keyword?("end"))

        %var%("elseExpr",
            %if%(consumedEnd? not and parser matchKeyword("else"),
                parser parseEndBlock(),
                { nothing }))

        { %if%(`condition, `thenExpr, `elseExpr) }
    end
end

MagpieParser registerParseword("if", IfParser new())
MagpieParser registerKeyword("then")
MagpieParser registerKeyword("else")

// TODO(bob): Put this somewhere appropriate...
MagpieParser registerKeyword("end")
