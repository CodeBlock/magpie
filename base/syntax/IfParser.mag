// Keyword parser for "if" expressions.
class IfParser
    def parse(parser MagpieParser -> Expression)
        parser consume("if")

        // Parse the condition.
        %var%("condition", parser parseBlock(TokenType thenToken) _0)

        // Parse the then body.
        parser consume(TokenType thenToken)
        %var%("thenParse", parser parseBlock("else", "end"))
        %var%("thenExpr", thenParse _0)

        // Parse the else body.
        %var%("consumedEnd?",
            Reflect same?(thenParse _1, nothing) not and
            %unsafecast%(Token, thenParse _1) keyword?("end"))

        %var%("elseExpr",
            match consumedEnd? not and parser matchKeyword("else")
                case true then parser parseEndBlock()
                else { nothing }
            end
        )

        {
            match `condition true?
                case true then `thenExpr
                else `elseExpr
            end
        }
    end
end

MagpieParser registerParseword("if", IfParser new())
MagpieParser reserveWord("else")

// TODO(bob): Put this somewhere appropriate...
MagpieParser reserveWord("end")
