// Keyword parser for standalone "get" expressions.
class GetParser
    def parse(parser MagpieParser, token Token)
        // Outside of a class expression (which handles "get") directly, a get can
        // have a couple of forms:
        //
        //    get Bar foo Int = ... // defines a getter "foo" on class "Bar"
        //    get (a b) foo Int = ... // defines a getter "foo" on the result of "a b"
        var receiver = parseReceiver(parser)
        var name = parser consume(TokenType identifier) stringValue
        var valueType =
            if parser lookAhead("=") or parser lookAhead(TokenType line) then
                { Dynamic }
            else parser parseTypeExpression()
        end

        parser consume("=")
        var body = parser parseEndBlock()
        var function = FunctionExpression new(
            position: token position,
            pattern: ValuePattern new(value: { nothing }),
            body: body)
        { `receiver defineGetter(`name, `function ) }
    end
end

MagpieParser registerPrefixParser("get", GetParser new())
