// Note: This file is parsed before any of the parsewords have been defined, so
// it only uses core syntax.

class FunctionTypeExpression
    shared def new(names      List(String),
                   paramType  Expression,
                   returnType Expression,
                   static?    Bool -> FunctionTypeExpression)
        construct(names: names, paramType: paramType, returnType: returnType,
                  static?: static?)
    end
    
    get string String =
        "not implemented!"
        /*
        var params = paramType as[TupleExpression]

        var result = if static? then "[" else "("
        for i = 0 until(names count)
        for name = names do
            result = result ~ name ~ " "
            let params then
                result = result ~ params fields(i)
            else
                result = result ~ paramType
            end
            
            if i < (names count - 1) then result = result ~ ", "
        end
        
        result = result ~ " -> " ~ returnType
        result ~ if static? then "]" else ")"
        */
    end
end

FunctionTypeExpression declareField("names", false, fn List(String))
FunctionTypeExpression declareField("paramType", false, fn Expression)
FunctionTypeExpression declareField("returnType", false, fn Expression)
FunctionTypeExpression declareField("static?", false, fn Bool)