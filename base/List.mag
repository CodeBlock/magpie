def (this List) iterate() -> ListIterator new(list: this)

defclass ListIterator
    var list
    var index = -1
end

// TODO(bob): Needing explicit "this" here is lame. The problem is there is
// apparently a "list" or "index" in an outer scope somewhere that gets hit
// instead of correctly inferring "this". Lame. :(

def (this ListIterator) current -> this list[index]

def (this ListIterator) next() ->
    this index = this index + 1
    this index < this list count
end

/*
def Array copy()
    var result = Array new()
    for item = this do result add(item)
    result
end


def Array unique()
    var result = Array new()
    for item = this do
        if result count == 0 then
            result add(item)
        else if result(-1) != item then result add(item)
    end

    result
end

def Array contains?(item)
    for element = this do
        if item == element then return true
    end
    false
end

def Array first(predicate)
    for element = this do
        if predicate(element) then return element
    end
    nothing
end

def Array swap(a Int, b Int)
    // TODO(bob): Bounds check
    var temp = this(a)
    this(a) = this(b)
    this(b) = temp
end
*/