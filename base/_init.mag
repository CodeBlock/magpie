def (_ String)  string -> this
def (nothing)   string -> "nothing"
def (true)      string -> "true"
def (false)     string -> "false"
def (_ Class)   string -> this name

def print()            -> prints("\n")
def print(text String) -> prints(text + "\n")
def print(any)         -> print(any string)

def not(true)  -> false
def not(false) -> true

// By default, == just does identity comparison.
def (_) ==(other) -> this sameAs?(other)

def (_) !=(other) -> not(this == other)

// Implement comparison in terms of a master compareTo() method.
def (_) <(other) -> this compareTo(other) == -1
def (_) >(other) -> this compareTo(other) == 1
def (_) <=(other) -> this compareTo(other) != 1
def (_) >=(other) -> this compareTo(other) != -1

// Make + default to string concatenation. We'll only hit this if both
// arguments are not Ints.
def (_) +(other) -> this string +(other string)

// Truthiness.
def (_)        true? -> true
def (_ Bool)   true? -> this
def (_ Int)    true? -> this != 0
def (_ String) true? -> this count > 0
def (nothing)  true? -> false

import("List.mag")
import("Range.mag")