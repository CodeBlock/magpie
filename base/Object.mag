// Provides additional functionality on Object.

// Returns true if the object can be assigned to the given type.
def Object is(type Type -> Bool) type assignsFrom?(this type)

// Returns the object cast to the given type if it can be safely assigned to
// that type, otherwise returns nothing.
def Object as[t_ -> t_ | Nothing]
    if type == t_ or t_ assignsFrom?(type) then unsafecast[t_](this)
end

// Returns the argument cast to the given type if it's type is an exact match
// and not a subtype, otherwise returns nothing.
def Object asExactly[t_ -> t_ | Nothing]
    if type == t_ then unsafecast[t_](this)
end

// Returns the object cast to the given type if it can be safely assigned to
// that type, otherwise throws an UnexpectedTypeError.
def Object expecting[t_ -> t_]
    if type == t_ or t_ assignsFrom?(type) then return unsafecast[t_](this)
    UnexpectedTypeError throw(t_, type)
end
