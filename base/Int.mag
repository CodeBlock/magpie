// Add iterator methods on Ints.
extend class Int
    // TODO(bob): Use real int max.
    get countingUp Range = Range new(this, 99999999)
end

defmethod Int times()
    Range new(0, this - 1)
end

defmethod Int to(last Int)
    Range new(this, last)
end

defmethod Int until(last Int)
    Range new(this, last - 1)
end

// Define an int iterator.
class RangeIterator
    shared def new(first Int, last Int)
        // rollback so the first call to next advances to the first
        construct(current: first - 1, last: last)
    end

    def next()
        current = current + 1
        current <= last
    end

    var current Int
    var last    Int
end

class Range
    shared def new(start Int, last Int)
        construct(start: start, last: last)
    end

    def iterate() RangeIterator new(start, last)

    var start Int
    var last  Int
end
