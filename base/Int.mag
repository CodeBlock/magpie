// Add iterator methods on Ints.
extend class Int
    // TODO(bob): Use real int max.
    get countingUp Range = Range new(this, 99999999)
end

def Int times()
    Range new(0, this - 1)
end

def Int to(last Int)
    Range new(this, last)
end

def Int until(last Int)
    Range new(this, last - 1)
end

// Define an int iterator.
class RangeIterator
    var current Int
    var last    Int
end

def shared RangeIterator new(first Int, last Int)
    // rollback so the first call to next advances to the first
    construct(current: first - 1, last: last)
end

def RangeIterator next()
    current = current + 1
    current <= last
end

class Range
    var start Int
    var last  Int
end

def shared Range new(start Int, last Int)
    construct(start: start, last: last)
end

def Range iterate()
    RangeIterator new(start, last)
end
