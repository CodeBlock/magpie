Q: Should Magpie explicitly have interfaces or follow the C++ model of abstract
classes and multiple inheritance?

Advantages for interfaces:
- Popular and familiar.
- Multiple inheritance is complex. Have to figure out how methods are looked up,
  how collisions are dealt with, how constructors are invoked, etc.
- Explicit. Interfaces cannot have implementation.

Advantages for abstract classes:
- Much more flexible. An abstract class can have some concrete methods.
- Just one kind of construct: the class. Of course, multiple inheritance adds
  complexity to offset that simplicity.
- Multiple inheritance is powerful and useful in its own right.
- Magpie's dynamic object-is-a-dictionary underlying system should simplify some
  of the problems with multiple inheritance that C++ has.

A: Not sure yet. Leaning towards trying abstract classes.